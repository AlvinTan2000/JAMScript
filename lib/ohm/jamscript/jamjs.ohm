JAMJS <: ES5 {
    Declaration     += Jconditional
                    | Jdata_decl
                    | Activity_def

    jdata_type      = broadcaster 
                    | logger 
                    | shuffler
    
    C_type          = "char" "*"                                                       -- pointer
                    | "char"
                    | "double"
                    | "int"
                    | "float"

    Jdata_spec      = C_type identifier as jdata_type "(" ("fog"|"cloud") ")" ";"   -- specified
                    | C_type identifier as jdata_type ";"                           -- default
                    | identifier as ( Window | Transform | Iopadref | Iopad ) ";"              -- other
    
    Window          = window "[" decimalIntegerLiteral "]" Layer_specifier? of jdata_id     -- points
                    | window Time_filter of jdata_id                                        -- time

    Transform       = transform Layer_specifier? identifier of NonemptyListOf<jdata_id, ",">

    Iopadref        = iopadref of iopadref_id

    iopadref_id     = identifier "." jdata_id

    Iopad           = iopad of NonemptyListOf<jdata_id, ",">

    jdata_id        = identifier "." identifier                                     -- namespace
                    | identifier
    
    Time_filter     = Absolute_time
                    | Relative_time

    Absolute_time   = "from" utc_string ("to" utc_string)?                            -- utc
                    | "from" decimalIntegerLiteral ("to" decimalIntegerLiteral)?      -- unix

    Relative_time   = "last" decimalIntegerLiteral ( "s" | "m" | "h" | "d" )

    Layer_specifier = "(" layer "," layer ")"
    layer           = "device" | "fog" | "cloud"

    utc_string      = utc_date "T" utc_time

    utc_date        = utc_four "-" utc_two "-" utc_two

    utc_time        = utc_two ":" utc_two ":" utc_two "." decimalIntegerLiteral utc_timezone   -- millisecond
                    | utc_two ":" utc_two ":" utc_two utc_timezone              -- default

    utc_timezone    = ( "+" | "-" ) utc_two ":" utc_two         -- timezone
                    | "Z"

    utc_four        = decimalDigit decimalDigit decimalDigit decimalDigit
    utc_two         = decimalDigit decimalDigit


    Jdata_decl      = jdata identifier "{" Jdata_spec* "}"          -- named
                    | jdata "{" Jdata_spec* "}"                     -- anonymous

    Jconditional    = jcond identifier? "{" Jcond_entry* "}"

    Jcond_entry     = identifier ":" NonemptyListOf<Jcond_rule, jcond_joiner> ";"

	Jcond_rule      = MemberExpr jcond_op MemberExpr
    
    MemberExpr      = MemberExpr "." identifier                     -- propRefExp
                    | identifier
                    | literal

    jcond_op        = "==" | ">=" | ">" | "<=" | "<" | "!="
    
    jcond_joiner    = "&&" | "||"

    Async_activity  = jasync Jcond_specifier? FunctionDeclaration

    Sync_activity   = jsync Jcond_specifier? FunctionDeclaration

    Jcond_specifier = "{" Jcond_expr "}"

    Jcond_expr      = "(" Jcond_expr ")"                            -- paran
                    | "!" Jcond_expr                                -- not
                    | Jcond_expr jcond_expr_op Jcond_expr           -- bin_op
                    | identifier "." identifier                     -- namespace_id
                    | identifier                                    -- id

    jcond_expr_op   = "&&" | "||"

    Activity_def    = Sync_activity
                    | Async_activity

    as = "as" ~identifierPart
    broadcaster = "broadcaster" ~identifierPart
    in := "in" ~identifierPart
    iopad = "iopad" ~identifierPart
    iopadref = "iopadref" ~identifierPart
    jasync = "jasync" ~identifierPart
    jcallback = "jcallback" ~identifierPart
    jcond = "jcond" ~identifierPart
    jdata = "jdata" ~identifierPart
    jsync = "jsync" ~identifierPart
    logger = "logger" ~identifierPart
    of = "of" ~identifierPart
    shuffler = "shuffler" ~identifierPart
    transform = "transform" ~identifierPart
    window = "window" ~identifierPart
}