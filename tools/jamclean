#!/bin/bash

# Edit the following locations to provide the correct location if needed
TMUX=`which tmux`
if [ -z $TMUX ]; then
    TMUX=/usr/local/bin/tmux
fi

# No need to edit below this line unless you find a bug!

die() {
    printf '%s\n' "$1" >&2
    exit 1
}

show_usage() {
    cat << EOF
Usage: jamclean

Purges inactive JAMScript programs from the listing.

EOF
}

checkprocess() {
    local pid=`cat $1/processId`
    local present=`ps -p $pid | grep node | wc -l`
    if [ $present == "1" ]; then
        running="true"
    else
        running="false"
    fi
}



printappl() {

    local prog=`echo $1 | awk '{split($0,a,"_"); print a[1]}'`
    local appl=`echo $1 | awk '{split($0,a,"_"); split(a[2],b, "/"); print b[1]}'`

    echo "PROGRAM $prog AS $appl"
}

printnodeinfo() {
    local port=$1
    local mtype=`cat $2/machType`
    if [ $mtype == "device" ]; then
        local temp=`ls $2/cdeviceId.*`
        local cdevs=`echo $temp | awk '{n=split($0, a, "__")} END{print n-1}'`
        echo -e "\t$mtype\tat port $port with $cdevs C nodes"
    else
        echo -e "\t$mtype\tat port $port"
    fi
}


if [ $1 == "-h" ] || [ $1 == "--help" ]; then
    show_usage
    exit
fi

jamfolder=$HOME"/__jamruns"
if [ ! -d $jamfolder ]; then
    echo "No running instances of JAMScript."
    exit 0
fi

cd $jamfolder

for jruns in */; do
    if [[ $jruns =~ .*$app.* ]]; then
        printappl $jruns
        for jexs in `ls $jamfolder/$jruns`; do
            dir=$jamfolder/$jruns$jexs
            if [ -d $dir ]; then
                checkprocess $dir
                if [ $running == "true" ]; then
                    printnodeinfo $jexs $dir
                fi
            fi
        done
    fi
done
