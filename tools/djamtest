#!/bin/bash

# No need to edit below this line unless you find a bug!

die() {
    printf '%s\n' "$1" >&2
    exit 1
}

show_usage() {
    cat << EOF

djamtest
Creates a test configuration of containers. Does not run JAMScript. One cloud node
(u-UID-test-cloud), two fog nodes (u-UID-test-fog-1) and (u-UID-test-fog-2). The fog
nodes are in different zones. It also creates two device nodes (u-UID-test-dev-1) and
(u-UID-test-dev-2).

You can login into the different nodes and ping each other to test the inter-container
latency.

All machines are detached. You need to attach to them again using:

docker attach node-name

EOF
}



killrouterpumba() {

    local pid=`ps axw | grep pumba | grep router | awk '{split($0,a, " "); print a[1]}'`
    if [ ! -z $pid ]; then
        kill $pid
    fi
}

startrouterpumba() {

    local routercmd=`cat $jamfolder/pumba_outfog_cmd`
    $routercmd &
}

restartrouterpumba() {

    killrouterpumba
    startrouterpumba
}


killfogpumba() {

    local pid=`ps axw | grep pumba | grep fog | awk '{split($0,a, " "); print a[1]}'`
    if [ ! -z $pid ]; then
        kill $pid
    fi
}

startfogpumba() {

    local fogcmd=`cat $jamfolder/pumba_infog_cmd`
    $fogcmd &
}

restartfogpumba() {

    killfogpumba
    startfogpumba
}


killcloudpumba() {

    local pid=`ps axw | grep pumba | grep cloud | awk '{split($0,a, " "); print a[1]}'`
    if [ ! -z $pid ]; then
        kill $pid
    fi
}

startcloudpumba() {

    local cloudcmd=`cat $jamfolder/pumba_cloud_cmd`
    $cloudcmd &
}

restartcloudpumba() {

    killcloudpumba
    startcloudpumba
}



jamfolder=$HOME"/__jamruns"
if [ ! -e $jamfolder ]; then
    die "JAMScript emulation is not yet initialized. Run djaminit first."
fi

if [ ! -z $1 ]; then
    if [ $1 == "-h" ] || [ $1 == "--help" ]; then
        show_usage
        exit
    fi
fi



if [ ! -e $jamfolder/pumba_cloud_cmd ]; then
    die "Run 'djam init' before running the 'djam test'. "
fi

if [ ! -e $jamfolder/pumba_infog_cmd ]; then
    die "Run 'djam init' before running the 'djam test'. "
fi

if [ ! -e $jamfolder/pumba_outfog_cmd ]; then
    die "Run 'djam init' before running the 'djam test'. "
fi


# Image
dockerImage=`cat $jamfolder/dockerImage`

# These containers are not created in the proper way
# This is for testing purposes.. so this is OK.

# Start a cloud machine
docker run -it -d --name "u-$UID-cloud-test"  $dockerImage

# Start two fog machines

docker run -it -d --name "u-$UID-fog-test-1"  $dockerImage
docker run -it -d --name "u-$UID-fog-test-2"  $dockerImage

# Start two devices
docker run -it -d --name "u-$UID-dev-test-1"  $dockerImage
docker run -it -d --name "u-$UID-dev-test-2"  $dockerImage

restartcloudpumba
restartrouterpumba
restartfogpumba

# Print a message
echo "Done. Configured the test topology."
